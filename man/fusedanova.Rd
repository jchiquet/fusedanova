% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fusedanova.R
\name{fusedanova}
\alias{fusedanova}
\title{Fit a Fused ANOVA model}
\usage{
fusedanova(x, class, weights = c("default", "laplace", "gaussian", "adaptive",
  "naivettest", "ttest", "welch", "personal"), standardize = TRUE, ...)
}
\arguments{
\item{x}{vector of observation for n individuals.}

\item{class}{vector or factor giving the initial class of each individual. If missing, 
\code{1:length(x)} is used (clustering mode with one individual per class).}

\item{standardize}{logical; should the vector be standardized before computation?
Default is \code{TRUE}.}

\item{...}{list of additional parameters to control the optimization procedure. Include :
\itemize{%
\item{\code{gamma}: } {non-negative scalar; the \eqn{\gamma}{gamma} parameter needed for
\code{"laplace"}, \code{"gaussian"} and \code{"adaptive"} weights. Default is 1.}

\item{\code{W}: } {numeric matrix; the matrix of weights needed if the \code{"personal"}
weights were selected. By default, a matrix with zero row and zero column.}

\item{\code{splits}:}{boolean; coding for enforcing split or nosplit algorithm.
\itemize{%
\item{\code{FALSE}: }{Forces the algorithm not to take the splits into account.}
\item{\code{TRUE}: }{Forces the algorithm to take the splits into account even if the solution paths contains no split.}
}
If not set, the program applies the approriate depending on the choosen \code{weights}.
}

\item{\code{epsilon}: }{numeric; tolerance parameter for numeric calculations when splits occur. By default, \eqn{10^-10}{eps}.}

\item{\code{checkargs}: }{logical; should arguments be checked to
(hopefully) avoid internal crashes? Default is \code{TRUE}.
Automatically set to \code{FALSE} when a call is made
from cross-validation}

\item{\code{verbose}: } {boolean; should the code print out its progress. By default, FALSE. }

\item{\code{mxSplitSize}: } {integer; the maximum size for a group for being checked
the cores available. }

}}
}
\value{
an object with class \code{fusedanova}, see the
documentation page \code{\linkS4class{fusedanova}} for details.

The optimization problem solved by fused-ANOVA is
\if{latex}{\deqn{%
\hat{\beta}_{\lambda} = \arg \min_{\beta}
\left\{\sum_{k=1}^K \sum_{i=1}^{n_k} \left(Y_{ik}-\beta_k \right)^2
+ \lambda \sum_{k,\ell} w_{kl} \left|\beta_k - \beta_\ell \right|\right\}}}
\if{html}{\out{ <center> &beta;<sup>hat</sup>
<sub>&lambda;<sub>1</sub></sub> =
argmin<sub>&beta;</sub> sum<sub>k</sub> sum_i (Y<sub>ik</sub> - &beta<sub>k</sub>)<sup>2</sup>
+ &lambda; sum<sub>k,l</sub> w<sub>k,l</sub>
&#124; &beta;<sub>k</sub> - &beta;<sub>l</sub> &#124;, </center> }}
\if{text}{\deqn{beta.hat(lambda) = argmin_beta sum_k sum_i (Y_ik - beta_k)^2
+ lambda sum_k sum_l w_kl | beta_k - beta_l|,}}

where \eqn{Y_{ik}}{Y_ik} is the intensity of a continuous random
variable for sample \eqn{i}{i} in condition \eqn{k}{k} and
\eqn{\beta_k}{beta_k} is the mean parameter of condition
\eqn{k}{k}. We denote by \eqn{K}{K} the total number of conditions
and \eqn{n_k}{n_k} the number of sample in each condition.

More details related to the weights are coming...
}
\description{
Adjust a penalized ANOVA model with Fused-LASSO (or Total Variation) penality, 
ie. a sum of weighted \eqn{\ell_1}{l1}-norm on the difference of each coefficient.
}
\examples{
\dontrun{
data(aves)
fa.laplace <- fusedanova(x=aves$weight, class=aves$family, weights="laplace", gamma=5)
plot(fa.laplace, labels=aves$order)

fa.ttest <- fusedanova(x=aves$weight, class=aves$family, weights="naivettest")
plot(fa.ttest, labels=aves$order)

fa.ada <- fusedanova(x=aves$weight, class=aves$family, weights="adaptive", gamma=2)
plot(fa.ada, labels=aves$order)
}

}
\seealso{
See also \code{\linkS4class{fusedanova}},
\code{\link{plot,fusedanova-method}} and \code{\link{cv.fa}}.
}
\keyword{models,}
\keyword{regression}
