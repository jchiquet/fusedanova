// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// export_order
Rcpp::IntegerVector export_order(IntegerMatrix merge, IntegerVector size);
RcppExport SEXP _fusedanova_export_order(SEXP mergeSEXP, SEXP sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type merge(mergeSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type size(sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(export_order(merge, size));
    return rcpp_result_gen;
END_RCPP
}
// export_merge
Rcpp::IntegerMatrix export_merge(IntegerVector parent1, IntegerVector parent2);
RcppExport SEXP _fusedanova_export_merge(SEXP parent1SEXP, SEXP parent2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type parent1(parent1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type parent2(parent2SEXP);
    rcpp_result_gen = Rcpp::wrap(export_merge(parent1, parent2));
    return rcpp_result_gen;
END_RCPP
}
// fusedanova_cpp
List fusedanova_cpp(NumericVector beta0, NumericVector slope0, IntegerVector size0);
RcppExport SEXP _fusedanova_fusedanova_cpp(SEXP beta0SEXP, SEXP slope0SEXP, SEXP size0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type beta0(beta0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type slope0(slope0SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type size0(size0SEXP);
    rcpp_result_gen = Rcpp::wrap(fusedanova_cpp(beta0, slope0, size0));
    return rcpp_result_gen;
END_RCPP
}
// pruneSplits
List pruneSplits(List listSetRules, IntegerMatrix orderRules, int n, int p);
RcppExport SEXP _fusedanova_pruneSplits(SEXP listSetRulesSEXP, SEXP orderRulesSEXP, SEXP nSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type listSetRules(listSetRulesSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type orderRules(orderRulesSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(pruneSplits(listSetRules, orderRules, n, p));
    return rcpp_result_gen;
END_RCPP
}
// get_slopes
NumericVector get_slopes(NumericVector& xm, IntegerVector& ngroup, std::string weights, double gamma, NumericMatrix& W);
RcppExport SEXP _fusedanova_get_slopes(SEXP xmSEXP, SEXP ngroupSEXP, SEXP weightsSEXP, SEXP gammaSEXP, SEXP WSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector& >::type xm(xmSEXP);
    Rcpp::traits::input_parameter< IntegerVector& >::type ngroup(ngroupSEXP);
    Rcpp::traits::input_parameter< std::string >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type W(WSEXP);
    rcpp_result_gen = Rcpp::wrap(get_slopes(xm, ngroup, weights, gamma, W));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_fusedanova_export_order", (DL_FUNC) &_fusedanova_export_order, 2},
    {"_fusedanova_export_merge", (DL_FUNC) &_fusedanova_export_merge, 2},
    {"_fusedanova_fusedanova_cpp", (DL_FUNC) &_fusedanova_fusedanova_cpp, 3},
    {"_fusedanova_pruneSplits", (DL_FUNC) &_fusedanova_pruneSplits, 4},
    {"_fusedanova_get_slopes", (DL_FUNC) &_fusedanova_get_slopes, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_fusedanova(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
