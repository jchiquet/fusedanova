// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// get_clustering
IntegerMatrix get_clustering(const NumericVector& set_lambdas, const NumericVector& all_lambdas, const IntegerVector& idown, const IntegerVector& iup, const int K);
RcppExport SEXP _fusedanova_get_clustering(SEXP set_lambdasSEXP, SEXP all_lambdasSEXP, SEXP idownSEXP, SEXP iupSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type set_lambdas(set_lambdasSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type all_lambdas(all_lambdasSEXP);
    Rcpp::traits::input_parameter< const IntegerVector& >::type idown(idownSEXP);
    Rcpp::traits::input_parameter< const IntegerVector& >::type iup(iupSEXP);
    Rcpp::traits::input_parameter< const int >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(get_clustering(set_lambdas, all_lambdas, idown, iup, K));
    return rcpp_result_gen;
END_RCPP
}
// noSplit
Rcpp::List noSplit(NumericVector x, NumericVector xv, NumericVector ngroup, List args);
RcppExport SEXP _fusedanova_noSplit(SEXP xSEXP, SEXP xvSEXP, SEXP ngroupSEXP, SEXP argsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xv(xvSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ngroup(ngroupSEXP);
    Rcpp::traits::input_parameter< List >::type args(argsSEXP);
    rcpp_result_gen = Rcpp::wrap(noSplit(x, xv, ngroup, args));
    return rcpp_result_gen;
END_RCPP
}
// get_slopes
NumericVector get_slopes(NumericVector& xm, IntegerVector& ngroup, NumericVector& xv, std::string weights, double gamma, NumericMatrix& W);
RcppExport SEXP _fusedanova_get_slopes(SEXP xmSEXP, SEXP ngroupSEXP, SEXP xvSEXP, SEXP weightsSEXP, SEXP gammaSEXP, SEXP WSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector& >::type xm(xmSEXP);
    Rcpp::traits::input_parameter< IntegerVector& >::type ngroup(ngroupSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type xv(xvSEXP);
    Rcpp::traits::input_parameter< std::string >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type W(WSEXP);
    rcpp_result_gen = Rcpp::wrap(get_slopes(xm, ngroup, xv, weights, gamma, W));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP noSplitcv(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_fusedanova_get_clustering", (DL_FUNC) &_fusedanova_get_clustering, 5},
    {"_fusedanova_noSplit", (DL_FUNC) &_fusedanova_noSplit, 4},
    {"_fusedanova_get_slopes", (DL_FUNC) &_fusedanova_get_slopes, 6},
    {"noSplitcv",                  (DL_FUNC) &noSplitcv,                  6},
    {NULL, NULL, 0}
};

RcppExport void R_init_fusedanova(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
